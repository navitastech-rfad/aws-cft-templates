---
AWSTemplateFormatVersion: '2010-09-09'
Description: 'ECS Service'
Parameters:
  ContainerName:
    Description: 'Name of the app'
    Type: String
    Default: 'main'
  ContainerPort:
    Description: 'container port'
    Type: String
    Default: '8080'
  LoadBalancerPriority:
    Description: 'The priority for the rule'
    Type: Number
    MinValue: 1
    MaxValue: 99999
  LoadBalancerPath:
    Description: 'the path pattern will be /service/*.  '
    Type: String
    Default: '/*'
    ConstraintDescription: 'Must not be longer than 255'
    MaxLength: 255
  LoadBalancerDeregistrationDelay:
    Description: 'The amount time (in seconds) to wait before changing the state of a deregistering target from draining to unused.'
    Type: Number
    Default: 300
    ConstraintDescription: 'Must be in the range [0-3600]'
    MinValue: 0
    MaxValue: 3600
  ListenerArn:
    Description: 'Listener ARN'
    Type: String
  Image:
    Description: 'The image to use for a container,'
    Type: String
Resources:
  Service: 
    Type: AWS::ECS::Service
    DependsOn: ListenerRule
    Properties: 
      Cluster: !ImportValue %%SGNAME%%-27-ecs-cluster:ECSCluster
      Role: !ImportValue %%SGNAME%%-19-IAMRoles:ECSServiceRole
      DesiredCount: 1
      TaskDefinition: !Ref TaskDefinition
      LoadBalancers: 
          - ContainerName: !Ref ContainerName
            ContainerPort: !Ref ContainerPort
            TargetGroupArn: !Ref TargetGroup

  TaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: !Ref ContainerName
      ContainerDefinitions:
          - Name: !Ref ContainerName
            Essential: true
            Image: !Ref Image
            Memory: 1024
            PortMappings:
              - ContainerPort: !Ref ContainerPort
  TargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      VpcId: !ImportValue %%SGNAME%%-01-vpc:vpc-id
      Port: 80
      Protocol: HTTP
      Matcher: 
          HttpCode: 200-299
      HealthCheckIntervalSeconds: 10
      HealthCheckPath: /
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 2
  ListenerRule:
        Type: AWS::ElasticLoadBalancingV2::ListenerRule
        Properties:
            ListenerArn: !Ref ListenerArn
            Priority: !Ref LoadBalancerPriority
            Conditions:
                - Field: path-pattern
                  Values: 
                    - !Sub '${LoadBalancerPath}/*'
            Actions:
                - TargetGroupArn: !Ref TargetGroup
                  Type: forward

     
Outputs:
  TargetGroup:
      Description: TargetGorup
      Value: !Ref TargetGroup
       