AWSTemplateFormatVersion: '2010-09-09'
Description: Security Groups
################################################################################
################################################################################
Resources:

################################################################################
#   SSH Security Group                                                                   #
################################################################################
  SSHSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: 'SSH bastion host/instance'
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: '0.0.0.0/0'
      VpcId: !ImportValue %%SGNAME%%-01-vpc:vpc-id
      Tags:
        - Key: Name
          Value: !Join [ "-", [ !Ref "AWS::StackName", SSH ] ]



################################################################################
#   ELB Security Group                                                                   #
################################################################################
  LoadBalancerSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: 'Load Balancer SG'
      VpcId: !ImportValue %%SGNAME%%-01-vpc:vpc-id
      Tags:
        - Key: Name
          Value: !Join [ "-", [ !Ref "AWS::StackName", ELB ] ]

  LoadBalancerSecurityGroupIngress443:
    Type: 'AWS::EC2::SecurityGroupIngress'
    Properties:
      GroupId: !Ref LoadBalancerSecurityGroup
      IpProtocol: tcp
      FromPort: 443
      ToPort: 443
      CidrIp: '0.0.0.0/0'

  LoadBalancerSecurityGroupIngress80:
    Type: 'AWS::EC2::SecurityGroupIngress'
    Properties:
      GroupId: !Ref LoadBalancerSecurityGroup
      IpProtocol: tcp
      FromPort: 80
      ToPort: 80
      CidrIp: '0.0.0.0/0'
      
################################################################################
#   EC2 Security Group                                                                   #
################################################################################
  EC2SecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: 'EC2-SG'
      VpcId: !ImportValue %%SGNAME%%-01-vpc:vpc-id
      Tags:
          - Key: Name
            Value: !Join [ "-", [ !Ref "AWS::StackName", EC2 ] ]

  EC2IngressFromELB:
    Type: 'AWS::EC2::SecurityGroupIngress'
    Properties:
      GroupId: !Ref EC2SecurityGroup
      FromPort: 80
      IpProtocol: tcp
      SourceSecurityGroupId: !Ref LoadBalancerSecurityGroup
      ToPort: 65535
  
  EC2IngressFromSSH:
    Type: 'AWS::EC2::SecurityGroupIngress'
    Properties:
      GroupId: !Ref EC2SecurityGroup
      IpProtocol: tcp
      FromPort: 22
      ToPort: 22
      SourceSecurityGroupId: !Ref SSHSecurityGroup
       
  EC2SecurityGroupSelf:
    Type: 'AWS::EC2::SecurityGroupIngress'
    Properties:
      GroupId: !Ref EC2SecurityGroup
      IpProtocol: -1
      FromPort: 0
      ToPort: 65535
      SourceSecurityGroupId: !Ref EC2SecurityGroup
    DependsOn: EC2SecurityGroup


################################################################################
#   POSTGRESQL Security Group                                                                   #
################################################################################
  PostgresqlSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: 'Postgresql SG'
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 5432
        ToPort: 5432
        CidrIp: '0.0.0.0/0'
      VpcId: !ImportValue %%SGNAME%%-01-vpc:vpc-id
      Tags:
        - Key: Name
          Value: !Join [ "-", [ !Ref "AWS::StackName", POSTGRESQL ] ]


Outputs:
 StackName:
    Description: 'Stack name.'
    Value: !Sub '${AWS::StackName}'
 SSHSecurityGroup:
    Description: 'SSH Security Group'
    Value: !Ref SSHSecurityGroup
    Export:
     Name: !Join [ ":", [ !Ref "AWS::StackName", SSHSecurityGroup ] ]
 ELBSecurityGroup:
    Description: 'LoadBalancer  Security Group'
    Value: !Ref LoadBalancerSecurityGroup
    Export:
      Name: !Join [ ":", [ !Ref "AWS::StackName", ELBSecurityGroup ] ]
 EC2SecurityGroup:
    Description: 'EC2  Security Group'
    Value: !Ref EC2SecurityGroup
    Export:
      Name: !Join [ ":", [ !Ref "AWS::StackName", EC2SecurityGroup ] ]
 PostgresqlSecurityGroup:
    Description: 'Postgresql Security Group'
    Value: !Ref PostgresqlSecurityGroup
    Export:
      Name: !Join [ ":", [ !Ref "AWS::StackName", PGSQLSecurityGroup ] ]